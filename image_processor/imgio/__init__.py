import numpy as np
import matplotlib.pyplot as plt
import cv2 as cv

from image_processor.core import sampling

GRAYSCALE_DOMAIN = (0, 256)


def display(img: np.ndarray, label: str="Image") -> None:
    """Literally displays the image."""
    cv.namedWindow(label, cv.WINDOW_KEEPRATIO)
    cv.imshow(label, img)

    while cv.getWindowProperty(label, cv.WND_PROP_VISIBLE) >= 1:
        cv.waitKey(50)


def plot_histogram(histogram: np.ndarray) -> None:
    """Plots a histogram graph with gray shades from the input image."""
    grayscale_levels = np.arange(0, len(histogram))

    plt.figure(figsize=(8,6))
    plt.bar(
        x=grayscale_levels,
        height=histogram,
        color='gray'
    )
    plt.title(f"Image Histogram")
    plt.xlabel("Grayscale level")
    plt.ylabel("Pixel count")
    plt.show()


def plot_histogram_prob(histogram: np.ndarray, img: np.ndarray) -> None:
    """Computes a probabilistic histogram graph and its cumulative values with
    the gray shades from the input image."""
    grayscale_levels = np.arange(0, len(histogram))
    normalized_histogram = histogram / (img.shape[0] * img.shape[1])

    cumulative_prob = sampling.cumulative_probability(normalized_histogram)

    plt.figure(figsize=(18,5))
    ax1 = plt.subplot(121)
    ax1.bar(
        x=grayscale_levels,
        height=normalized_histogram,
        color='gray',
    )
    ax1.set_title('Probabilistic Histogram')
    ax2 = plt.subplot(122)
    ax2.plot(
        grayscale_levels,
        cumulative_prob,
        color='black',
    )
    ax2.set_title('Cumulative Probability')
    plt.show()


def plot_interpolation_function(img: np.ndarray, pa: tuple, pb: tuple, f_output: np.ndarray) -> None:
    """Displays the plot of the interpolation function generated by two points."""
    domain = np.arange(0, 256)
    histogram = sampling.histogram(img)

    # Normalize histogram to have matching domain sizes
    histogram = histogram / histogram.max()
    histogram = histogram * 255.0

    plt.figure(figsize=(5,5))
    plt.bar(
        x=domain,
        height=histogram,
        color='gray'
    )
    plt.plot(domain, f_output, color='black')
    plt.plot(pa[0], pa[1], 'go')
    plt.plot(pb[0], pb[1], 'ro')
    plt.xlim(GRAYSCALE_DOMAIN)
    plt.ylim(GRAYSCALE_DOMAIN)
    plt.grid()
    plt.show()
